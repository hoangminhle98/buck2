"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6315],{64302:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var r=t(74848),s=t(28453),a=t(28774);const i={},o="range",c={id:"api/starlark/range",title:"range",description:"def range(",source:"@site/../docs/api/starlark/range.md",sourceDirName:"api/starlark",slug:"/api/starlark/range",permalink:"/docs/api/starlark/range",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"list",permalink:"/docs/api/starlark/list"},next:{title:"set",permalink:"/docs/api/starlark/set"}},d={},l=[];function p(e){const n={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"range",children:"range"})}),"\n",(0,r.jsx)("pre",{class:"language-python",children:(0,r.jsxs)("code",{children:["def range(\na1: ",(0,r.jsx)(a.default,{to:"/docs/api/starlark/int",children:"int"}),",\na2: ",(0,r.jsx)(a.default,{to:"/docs/api/starlark/int",children:"int"})," = ...,\nstep: ",(0,r.jsx)(a.default,{to:"/docs/api/starlark/int",children:"int"})," = 1,\n/,\n) -> ",(0,r.jsx)(a.default,{to:"/docs/api/starlark/range",children:"range"})]})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://github.com/bazelbuild/starlark/blob/master/spec.md#range",children:"range"}),": return a range of integers"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"range"})," returns a tuple of integers defined by the specified interval\nand stride."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"range(stop)                             # equivalent to range(0, stop)\nrange(start, stop)                      # equivalent to range(start, stop, 1)\nrange(start, stop, step)\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"range"})," requires between one and three integer arguments.\nWith one argument, ",(0,r.jsx)(n.code,{children:"range(stop)"})," returns the ascending sequence of\nnon-negative integers less than ",(0,r.jsx)(n.code,{children:"stop"}),".\nWith two arguments, ",(0,r.jsx)(n.code,{children:"range(start, stop)"})," returns only integers not less\nthan ",(0,r.jsx)(n.code,{children:"start"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["With three arguments, ",(0,r.jsx)(n.code,{children:"range(start, stop, step)"})," returns integers\nformed by successively adding ",(0,r.jsx)(n.code,{children:"step"})," to ",(0,r.jsx)(n.code,{children:"start"})," until the value meets or\npasses ",(0,r.jsx)(n.code,{children:"stop"}),". A call to ",(0,r.jsx)(n.code,{children:"range"})," fails if the value of ",(0,r.jsx)(n.code,{children:"step"})," is\nzero."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"list(range(10))                         == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\nlist(range(3, 10))                      == [3, 4, 5, 6, 7, 8, 9]\nlist(range(3, 10, 2))                   == [3, 5, 7, 9]\nlist(range(10, 3, -2))                  == [10, 8, 6, 4]\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var r=t(96540);const s={},a=r.createContext(s);function i(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);